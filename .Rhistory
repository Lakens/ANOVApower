d <-  ANOVA_design(string = "2b",
n = 100,
mu = c(24, 26.2),
sd = 6.4,
labelnames = c("condition", "control", "pet"),
plot = FALSE)
exact_result <- ANOVA_exact(d, alpha_level = 0.0
5)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
library(ANOVApower)
d <-  ANOVA_design(string = "2b",
n = 100,
mu = c(24, 26.2),
sd = 6.4,
labelnames = c("condition", "control", "pet"),
plot = FALSE)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
library(ANOVApower)
d <-  ANOVA_design(string = "2b",
n = 100,
mu = c(24, 26.2),
sd = 6.4,
labelnames = c("condition", "control", "pet"),
plot = FALSE)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
d <- ANOVA_design("2w*2b", n = 100, mu = 1:4, sd = 1, r = 0.5,
labelnames = c("W", "W1", "W2", "B", "B1", "B2"))
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
d <- ANOVA_design("2b*2b*2w", n = 100, mu = 1:8, sd = 1.5, r = .68)
exact_result <- ANOVA_exact(d, alpha_level = 0.
0
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
power_result <- ANOVA_power(d, nsims = 10)
exact_result$pc_results
power_result$sim_data
d <- ANOVA_design("2b*2b*2w", n = 100, mu = 1:8, sd = 1.5, r = .68)
library(ANOVApower)
d <- ANOVA_design("2b*2b*2w", n = 100, mu = 1:8, sd = 1.5, r = .68)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
exact_result$sim_data
library(ANOVApower)
d <- ANOVA_design("2b*2b*2w", n = 100, mu = 1:8, sd = 1.5, r = .68)
exact_result <- ANOVA_exact(d, alpha_level = 0.
1
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
library(ANOVApower)
d <- ANOVA_design("2b*2b*2w", n = 100, mu = 1:8, sd = 1.5, r = .68)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
library(ANOVApower)
d <- ANOVA_design("2b*2b*2w", n = 100, mu = 1:8, sd = 1.5, r = .68)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
d <- ANOVA_design("2b*2b*2w", n = 100, mu = 1:8, sd = 1.5, r = .68)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
library(ANOVApower)
d <- ANOVA_design("2b*2b*2w", n = 100, mu = 1:8, sd = 1.5, r = .68)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
d <- ANOVA_design("2b", n = 100, mu = c(0,0), sd = 1, plot = FALSE)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
d <- ANOVA_design("2b", n = 100, mu = c(0,0.5), sd = 1, plot = FALSE)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
library(ANOVApower)
d <- ANOVA_design("2b", n = 100, mu = c(0,0.5), sd = 1, plot = FALSE)
exact_result <- ANOVA_exact(d, alpha_level = 0.05)
library(ANOVApower)
devtools::test()
?check
install.packages("roxygen2")
library(ANOVApower)
library(ANOVApower)
rmarkdown::pandoc_version()
local({
# The directory where Pandoc will be extracted. Feel free
# to adjust this path as appropriate.
dir <- "~/rstudio-pandoc"
# The version of Pandoc to be installed.
version <- "2.7.1"
# Create and move to the requested directory.
dir.create(dir, showWarnings = FALSE, recursive = TRUE)
owd <- setwd(dir)
on.exit(setwd(owd), add = TRUE)
# Construct path to pandoc.
root <- "https://s3.amazonaws.com/rstudio-buildtools"
suffix <- sprintf("pandoc-%s-windows-x86_64.zip", version)
url <- file.path(root, "pandoc-rstudio", version, suffix)
# Download and extract pandoc.
file <- basename(url)
utils::download.file(url, destfile = file)
utils::unzip(file)
unlink(file)
# Write .Renviron to update the version of Pandoc used.
entry <- paste("RSTUDIO_PANDOC", shQuote(path.expand(dir)), sep = " = ")
contents <- if (file.exists("~/.Renviron")) readLines("~/.Renviron")
filtered <- grep("^RSTUDIO_PANDOC", contents, value = TRUE, invert = TRUE)
amended <- union(filtered, entry)
writeLines(amended, "~/.Renviron")
# Report change to the user.
writeLines("Updated .Renviron:\n")
writeLines(amended)
writeLines("\nPlease restart RStudio for these changes to take effect.")
})
library(ANOVApower)
library(ANOVApower)
#2w
test_that("2w", {
design <- ANOVA_design(string = "2w", n = 100, mu = c(0, 0.25), sd = 1, r = 0.5, plot = FALSE)
p <- ANOVA_power(design, nsims = 50, seed = 8675309, verbose = FALSE)
pe <- ANOVA_exact(design, seed = 8675309, verbose = FALSE)
comp <- list()
comp$main_results <- data.frame(
power = c(68),
effect_size = c(0.0563),
row.names = c("anova_a")
)
comp$pc_results <- data.frame(
power = c(68),
effect_size = c(0.2518),
row.names = c("p_a_a1_a_a2")
)
expect_equal(p$main_results, comp$main_results)
expect_equal(p$pc_results, comp$pc_results)
expect_equal(p$p_adjust, "none")
expect_equal(p$nsims, 50)
})
library(testthat)
#2w
test_that("2w", {
design <- ANOVA_design(string = "2w", n = 100, mu = c(0, 0.25), sd = 1, r = 0.5, plot = FALSE)
p <- ANOVA_power(design, nsims = 50, seed = 8675309, verbose = FALSE)
pe <- ANOVA_exact(design, seed = 8675309, verbose = FALSE)
comp <- list()
comp$main_results <- data.frame(
power = c(68),
effect_size = c(0.0563),
row.names = c("anova_a")
)
comp$pc_results <- data.frame(
power = c(68),
effect_size = c(0.2518),
row.names = c("p_a_a1_a_a2")
)
expect_equal(p$main_results, comp$main_results)
expect_equal(p$pc_results, comp$pc_results)
expect_equal(p$p_adjust, "none")
expect_equal(p$nsims, 50)
})
expect_equal(p$main_results, comp$main_results)
expect_equal(p$pc_results, comp$pc_results)
expect_equal(p$p_adjust, "none")
expect_equal(p$nsims, 50)
design <- ANOVA_design(string = "2w", n = 100, mu = c(0, 0.25), sd = 1, r = 0.5, plot = FALSE)
p <- ANOVA_power(design, nsims = 50, seed = 8675309, verbose = FALSE)
pe <- ANOVA_exact(design, seed = 8675309, verbose = FALSE)
comp <- list()
comp$main_results <- data.frame(
power = c(68),
effect_size = c(0.0563),
row.names = c("anova_a")
)
comp$pc_results <- data.frame(
power = c(68),
effect_size = c(0.2518),
row.names = c("p_a_a1_a_a2")
)
expect_equal(p$main_results, comp$main_results)
expect_equal(p$pc_results, comp$pc_results)
expect_equal(p$p_adjust, "none")
expect_equal(p$nsims, 50)
design <- ANOVA_design(string = "2w", n = 100, mu = c(0, 0.25), sd = 1, r = 0.5, plot = FALSE)
p <- ANOVA_power(design, nsims = 50, seed = 8675309, verbose = FALSE)
pe <- ANOVA_exact(design, seed = 8675309, verbose = FALSE)
comp <- list()
comp$main_results <- data.frame(
power = c(68),
effect_size = c(0.0563),
row.names = c("anova_a")
)
comp$pc_results <- data.frame(
power = c(68),
effect_size = c(0.2518),
row.names = c("p_a_a1_a_a2")
)
expect_equal(p$main_results, comp$main_results, pe$main_results)
expect_equal(p$pc_results, comp$pc_results, pe$pc_results)
expect_equal(p$p_adjust, "none")
expect_equal(p$nsims, 50)
expect_equal(p$main_results, comp$main_results)
expect_equal(p$main_results, pe$main_results)
design <- ANOVA_design(string = "2w", n = 100, mu = c(0, 0.25), sd = 1, r = 0.5, plot = FALSE)
system.time(
p <- ANOVA_power(design, nsims = 1000, seed = 8675309, verbose = FALSE)
)
pe <- ANOVA_exact(design, seed = 8675309, verbose = FALSE)
p2 <- pwr::pwr.t.test(n = 100, d = 0.25, type = "paired")
expect_equal(p$main_results$power/100, p2$power, tolerance = .02)
expect_equal(pe$main_results$power/100, p2$power, tolerance = .02)
expect_equal(p$pc_results$power/100, p2$power, tolerance = .02)
expect_equal(pe$pc_results$power/100, p2$power, tolerance = .02)
expect_equal(p$pc_results$effect_size, p2$d, tolerance = .02)
expect_equal(pe$pc_results$effect_size, p2$d, tolerance = .02)
design <- ANOVA_design(string = "2b",
n = 100,
mu = c(24, 26.2),
sd = 6.4,
labelnames = c("condition", "control", "pet"),
plot = FALSE)
system.time(
p <- ANOVA_power(design, alpha_level = 0.05, nsims = 1000, seed = 644, verbose = FALSE)
)
pe <- ANOVA_exact(design, seed = 644, verbose = FALSE)
p2 <- pwr::pwr.t.test(d = 2.2/6.4,
n = 100,
sig.level = 0.05,
type = "two.sample",
alternative = "two.sided")$power
expect_equal(p$main_results$power/100, p2, tolerance = .02)
expect_equal(pe$main_results$power/100, p2, tolerance = .02)
labelnames <- c("Size", "b", "s", "Color", "g", "r",
"Load", "pres", "abs") #
design <- ANOVA_design(string = "2b*2b*2b",
n = 50,
mu = c(2, 2, 6, 1, 6, 6, 1, 8),
sd = 10,
labelnames = labelnames)
system.time(
p <- ANOVA_power(design, alpha_level = 0.05, nsims = 2000, seed = 8224, verbose = FALSE)
)
pe <- ANOVA_power(design, alpha_level = 0.05, verbose = FALSE)
power_analytic <- power_threeway_between(design)
expect_equal(p$main_results$power/100,
c(power_analytic$power_A, power_analytic$power_B, power_analytic$power_C,
power_analytic$power_AB, power_analytic$power_AC, power_analytic$power_BC,
power_analytic$power_ABC), tolerance = .02)
expect_equal(p$main_results$power/100,
pe$main_results$power/100, tolerance = .02)
expect_equal(p$pc_results$power/100,
pe$pc_results$power/100, tolerance = .02)
p$pc_results$power/100
pe$pc_results$power/100
labelnames <- c("Size", "b", "s", "Color", "g", "r",
"Load", "pres", "abs") #
design <- ANOVA_design(string = "2b*2b*2b",
n = 50,
mu = c(2, 2, 6, 1, 6, 6, 1, 8),
sd = 10,
labelnames = labelnames)
system.time(
p <- ANOVA_power(design, alpha_level = 0.05, nsims = 4000, seed = 8224, verbose = FALSE)
)
pe <- ANOVA_power(design, alpha_level = 0.05, verbose = FALSE)
power_analytic <- power_threeway_between(design)
expect_equal(p$main_results$power/100,
c(power_analytic$power_A, power_analytic$power_B, power_analytic$power_C,
power_analytic$power_AB, power_analytic$power_AC, power_analytic$power_BC,
power_analytic$power_ABC), tolerance = .02)
expect_equal(p$main_results$power/100,
pe$main_results$power/100, tolerance = .02)
expect_equal(p$pc_results$power/100,
pe$pc_results$power/100, tolerance = .02)
pe$pc_results
expect_equal(rownames(p$pc_results),
rownames(pe$pc_results))
View(p$pc_results)
View(pe$pc_results)
View(pe$pc_results)
labelnames <- c("Size", "b", "s", "Color", "g", "r",
"Load", "pres", "abs") #
design <- ANOVA_design(string = "2b*2b*2b",
n = 100,
mu = c(2, 2, 6, 1, 6, 6, 1, 8),
sd = 10,
labelnames = labelnames)
p <- ANOVA_power(design, alpha_level = 0.05, nsims = 4000, seed = 8224, verbose = FALSE)
pe <- ANOVA_power(design, alpha_level = 0.05, verbose = FALSE)
power_analytic <- power_threeway_between(design)
expect_equal(p$main_results$power/100,
c(power_analytic$power_A, power_analytic$power_B, power_analytic$power_C,
power_analytic$power_AB, power_analytic$power_AC, power_analytic$power_BC,
power_analytic$power_ABC), tolerance = .02)
expect_equal(p$main_results$power/100,
pe$main_results$power/100, tolerance = .02)
expect_equal(p$pc_results$power/100,
pe$pc_results$power/100, tolerance = .02)
expect_equal(rownames(p$pc_results),
rownames(pe$pc_results))
design <- ANOVA_design(string = "2b*2b*2b",
n = 80,
mu = c(2, 2, 6, 1, 6, 6, 1, 8),
sd = 10,
labelnames = labelnames)
p <- ANOVA_power(design, alpha_level = 0.05, nsims = 4000, seed = 8224, verbose = FALSE)
pe <- ANOVA_power(design, alpha_level = 0.05, verbose = FALSE)
power_analytic <- power_threeway_between(design)
expect_equal(p$main_results$power/100,
c(power_analytic$power_A, power_analytic$power_B, power_analytic$power_C,
power_analytic$power_AB, power_analytic$power_AC, power_analytic$power_BC,
power_analytic$power_ABC), tolerance = .02)
expect_equal(p$main_results$power/100,
pe$main_results$power/100, tolerance = .02)
expect_equal(p$pc_results$power/100,
pe$pc_results$power/100, tolerance = .02)
expect_equal(rownames(p$pc_results),
rownames(pe$pc_results))
mu <- c(-0.25, 0.25, 0.25, -0.25)
n <- 23
sd <- 1
r <- 0.5
string = "2w*2b"
alpha_level <- 0.05
p_adjust = "none"
labelnames = c("age", "old", "young", "color", "blue", "red")
design <- ANOVA_design(string = string,
n = n,
mu = mu,
sd = sd,
r = r,
labelnames = labelnames,
plot = FALSE)
pe <- ANOVA_power(design, verbose = FALSE)
p <- ANOVA_power(design, alpha_level = 0.05, nsims = 1000, seed = 435, verbose = FALSE)
pe <- ANOVA_power(design, verbose = FALSE)
p_inter <- 0.9124984 #power obtained from GPower https://github.com/Lakens/ANOVA_power_simulation/blob/master/validation_files/3.1_validation_power_between_within_2x2.md
expect_equal(p$main_results$power[3]/100, p_inter, tolerance = .02)
expect_equal(pe$main_results$power[3]/100, p$main_results$power[3]/100, tolerance = .02)
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$main_results$power
p$pc_results$power
p
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
design <- ANOVA_design(string = "2w", n = 10, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
?power.t.test
design <- ANOVA_design(string = "2w", n = 100, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
power.t.test(n = 10, delta = 0, sd = 1, type = "paired", alternative = "two.sided")
power.t.test(n = 10, delta = 0, sd = 1, type = "paired", alternative = "two.sided", strict = TRUE)
power.t.test(n = 10, delta = 0, sd = 1, type = "two.sample", alternative = "two.sided", strict = TRUE)
power.t.test(n = 10, delta = 0, sd = 1, type = "two.sample", alternative = "two.sided", strict = FALSE)
library(ANOVApower)
design <- ANOVA_design(string = "2w", n = 100, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$pc_results
expect_equal(p$main_results$power, 5)
expect_equal(p$pc_results$power, 5)
#2w null
test_that("2w null", {
design <- ANOVA_design(string = "2w", n = 100, mu = c(0, 0), sd = 1, r = 0.5, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
expect_equal(p$main_results$power, 5)
expect_equal(p$pc_results$power, 5)
})
#2b null
test_that("2b null", {
design <- ANOVA_design(string = "2b", n = 100, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
expect_equal(p$main_results$power, 5)
expect_equal(p$pc_results$power, 5)
})
design <- ANOVA_design(string = "2b", n = 100, mu = c(0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
expect_equal(p$main_results$power, 5)
expect_equal(p$pc_results$power, 5)
design <- ANOVA_design(string = "2w", n = 21, mu = c(0, 0.65), sd = 1, r = 0.55, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
p$main_results
expect_equal(p$main_results$power, 84.7, tolerance = 0.1)
expect_equal(p$main_results$power, 84.7)
design <- ANOVA_design(string = "2b", n = 22, mu = c(0, 0.65), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
expect_equal(p$main_results$power, 55.8, tolerance = 0.1)
expect_equal(p$pc_results$power, 55.8, tolerance = 0.1)
p$main_results$power
design <- ANOVA_design(string = "3w", n = 100,
mu = c(0, 0, 0), sd = 1, r = 0.5, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
expect_equal(p$main_results$power, 5)
expect_equal(p$pc_results$power, c(5,5))
p$pc_results$power
expect_equal(p$main_results$power, 15, tolerance = 0.1)
design <- ANOVA_design(string = "3b", n = 100,
mu = c(0, 0, 0), sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
expect_equal(p$main_results$power, 15, tolerance = 0.1)
p$main_results$power
design <- ANOVA_design(string = "4b", n = 15,
mu = c(0, 0.25, 0.33, 0.44),
sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
expect_equal(p$main_results$power, 15, tolerance = 0.1)
p$pc_results$power
design <- ANOVA_design(string = "4b", n = 15,
mu = c(0, 0.25, 0.33, 0.44),
sd = 1, plot = FALSE)
p <- ANOVA_exact(design, verbose = FALSE)
expect_equal(p$main_results$power, 15, tolerance = 0.1)
expect_equal(p$pc_results$power,
c(10.14,14.08,21.39,5.51,7.94,5.98),
tolerance = 0.1)
library(ANOVApower)
design <- ANOVA_design(string = "3b",
n = 50,
mu = c(24, 26.2, 26.6),
sd = 6.4,
labelnames = c("condition", "control", "cat", "dog"),
plot = FALSE)
system.time(
p <- ANOVA_power(design, alpha_level = 0.05, nsims = 5000, seed = 123, verbose = FALSE)
)
pe <- ANOVA_power(design, alpha_level = 0.05, verbose = FALSE)
pc_1 <- pwr::pwr.t.test(d = 2.2/6.4,
n = 50,
sig.level = 0.05,
type = "two.sample",
alternative = "two.sided")$power
pc_2 <- pwr::pwr.t.test(d = 2.6 / 6.4,
n = 50,
sig.level = 0.05,
type = "two.sample",
alternative = "two.sided")$power
pc_3 <- pwr::pwr.t.test(d = 0.4/6.4,
n = 50,
sig.level = 0.05,
type = "two.sample",
alternative = "two.sided")$power
pmain <- pwr::pwr.anova.test(k = 3, n = 50, f = 0.1786086, sig.level = 0.05)$power #f obtained from GPower
expect_equal(p$main_results$power/100, pmain, tolerance = .02)
expect_equal(p$main_results$power/100, pe$main_results$power/100, tolerance = .02)
expect_equal(p$pc_results$power/100, pe$pc_results$power/100, tolerance = .02)
expect_equal(p$pc_results$power/100, c(pc_1, pc_2, pc_3), tolerance = .02)
pe <- ANOVA_power(design, alpha_level = 0.05, seed = 123, verbose = FALSE)
pc_1 <- pwr::pwr.t.test(d = 2.2/6.4,
n = 50,
sig.level = 0.05,
type = "two.sample",
alternative = "two.sided")$power
pc_2 <- pwr::pwr.t.test(d = 2.6 / 6.4,
n = 50,
sig.level = 0.05,
type = "two.sample",
alternative = "two.sided")$power
pc_3 <- pwr::pwr.t.test(d = 0.4/6.4,
n = 50,
sig.level = 0.05,
type = "two.sample",
alternative = "two.sided")$power
pmain <- pwr::pwr.anova.test(k = 3, n = 50, f = 0.1786086, sig.level = 0.05)$power #f obtained from GPower
expect_equal(p$main_results$power/100, pmain, tolerance = .02)
expect_equal(p$main_results$power/100, pe$main_results$power/100, tolerance = .02)
expect_equal(p$pc_results$power/100, pe$pc_results$power/100, tolerance = .02)
expect_equal(p$pc_results$power/100, c(pc_1, pc_2, pc_3), tolerance = .02)
pe <- ANOVA_exact(design, alpha_level = 0.05, verbose = FALSE)
pc_1 <- pwr::pwr.t.test(d = 2.2/6.4,
n = 50,
sig.level = 0.05,
type = "two.sample",
alternative = "two.sided")$power
pc_2 <- pwr::pwr.t.test(d = 2.6 / 6.4,
n = 50,
sig.level = 0.05,
type = "two.sample",
alternative = "two.sided")$power
pc_3 <- pwr::pwr.t.test(d = 0.4/6.4,
n = 50,
sig.level = 0.05,
type = "two.sample",
alternative = "two.sided")$power
pmain <- pwr::pwr.anova.test(k = 3, n = 50, f = 0.1786086, sig.level = 0.05)$power #f obtained from GPower
expect_equal(p$main_results$power/100, pmain, tolerance = .02)
expect_equal(p$main_results$power/100, pe$main_results$power/100, tolerance = .02)
expect_equal(p$pc_results$power/100, pe$pc_results$power/100, tolerance = .02)
expect_equal(p$pc_results$power/100, c(pc_1, pc_2, pc_3), tolerance = .02)
library(ANOVApower)
